// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_0_StackTest
D;JEQ
D=0
@AFTER_IF_0_StackTest
0;JMP
(IF_0_StackTest)
D=-1
(AFTER_IF_0_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_1_StackTest
D;JEQ
D=0
@AFTER_IF_1_StackTest
0;JMP
(IF_1_StackTest)
D=-1
(AFTER_IF_1_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_2_StackTest
D;JEQ
D=0
@AFTER_IF_2_StackTest
0;JMP
(IF_2_StackTest)
D=-1
(AFTER_IF_2_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_3_StackTest
D;JLT
D=0
@AFTER_IF_3_StackTest
0;JMP
(IF_3_StackTest)
D=-1
(AFTER_IF_3_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_4_StackTest
D;JLT
D=0
@AFTER_IF_4_StackTest
0;JMP
(IF_4_StackTest)
D=-1
(AFTER_IF_4_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_5_StackTest
D;JLT
D=0
@AFTER_IF_5_StackTest
0;JMP
(IF_5_StackTest)
D=-1
(AFTER_IF_5_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_6_StackTest
D;JGT
D=0
@AFTER_IF_6_StackTest
0;JMP
(IF_6_StackTest)
D=-1
(AFTER_IF_6_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_7_StackTest
D;JGT
D=0
@AFTER_IF_7_StackTest
0;JMP
(IF_7_StackTest)
D=-1
(AFTER_IF_7_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@IF_8_StackTest
D;JGT
D=0
@AFTER_IF_8_StackTest
0;JMP
(IF_8_StackTest)
D=-1
(AFTER_IF_8_StackTest)
@SP
A=M
M=D
@SP
M=M+1
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
AM=M-1
D=-M
@SP
A=M
M=D
@SP
M=M+1
// and
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D&M
@SP
A=M
M=D
@SP
M=M+1
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D|M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
AM=M-1
D=!M
@SP
AM=M-1
D=M
